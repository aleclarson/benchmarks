#!/usr/bin/env coffee
ps = require 'persec'

arr = []
do ->
  for i in [0...5]
    arr[i] = for i in [0...10]
      Promise.resolve()
  return

ps.configure
  minTime: 0
  minSamples: 500

parallel = (arr) -> Promise.all arr

# wrap array of Promise.all() with Promise.all()
ps 'map', (done) ->
  res = await Promise.all arr.map parallel
  each = (x) -> x
  res.forEach (arr) ->
    res.forEach each
  done()

# flatten array with concat() then use Promise.all()
ps 'concat.apply', (done) ->
  res = await Promise.all arr.concat.apply [], arr
  res.forEach (x) -> x
  done()

# flatten array by assignment then use Promise.all()
ps 'assign', (done) ->
  i = -1; flat = []
  arr.forEach (arr) ->
    arr.forEach (p) ->
      flat[++i] = p
      return

  res = await Promise.all flat
  res.forEach (x) -> x
  done()

ps 'push.apply', (done) ->
  flat = []
  arr.forEach (arr) ->
    flat.push.apply flat, arr

  res = await Promise.all flat
  res.forEach (x) -> x
  done()
